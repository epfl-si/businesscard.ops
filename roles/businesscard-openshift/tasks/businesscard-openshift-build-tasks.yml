- name: "`{{ businesscard_base_image_pull_secret_name }}` Secret"
  openshift:
    apiVersion: v1
    kind: Secret
    metadata:
      name: "{{ businesscard_base_image_pull_secret_name }}"
      namespace: '{{ openshift_namespace }}'
    type: kubernetes.io/dockerconfigjson
    data:
      .dockerconfigjson: >-
        {{ _docker_config | to_json | b64encode | trim }}
  vars:
    _username: epfl-si  # This is actually ignored by GitHub
    _password: "{{ keybase_secrets.common_web_github_registry_token }}"
    _email: isas-fsd@groupes.epfl.ch
    # Reverse engineered from reading the Secret created with the instructions
    # from https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html#allowing-pods-to-reference-images-from-other-secured-registries
    _docker_config:
      auths:
        ghcr.io:
          username: "{{ _username }}"
          password: "{{ _password }}"
          email: "{{ _email }}"
          auth: >-
            {{ ("%s:%s" % (_username, _password)) | b64encode }}
  when: businesscard_build_openshift_namespace == openshift_namespace
  tags:
    - all
    - all_build
    - businesscard.secrets

- name: "Link `{{ businesscard_base_image_pull_secret_name }}` Secret to `builder` ServiceAccount`"
  shell:
    cmd: |
      set -x
      if {{ _oc }} get -o jsonpath='{.secrets}' serviceaccount/builder |grep "{{ businesscard_base_image_pull_secret_name }}"; then
        echo "ALREADY_DONE"
        exit 0
      fi
      {{ _oc }} secrets link builder {{ businesscard_base_image_pull_secret_name }}
  vars:
    _oc: oc -n "{{ openshift_namespace }}"
  register: _oc_secrets_link_cmd
  changed_when: >-
    (_oc_secrets_link_cmd is defined)
    and
    ("ALREADY_DONE" not in _oc_secrets_link_cmd.stdout)
  when: businesscard_build_openshift_namespace == openshift_namespace
  tags:
    - all
    - all_build
    - businesscard.is
    - businesscard.image
    - businesscard.imagestream

# docker-registry.default.svc:5000/businesscard-preprod/businesscard:develop
# Build a businesscard image from cadi-base image and tag
# it. Use os-docker-registry.epfl.ch/businesscard-test/businesscard:preprod
# to get it.
- name: "`{{ businesscard_image_name }}` BuildConfig and ImageStream"
  openshift_imagestream:
    state: latest
    metadata:
      namespace: "{{ openshift_namespace }}"
      name: "{{ businesscard_image_name }}"
    source:
      git:
        uri: "{{ businesscard_git_repository }}"
        ref: "{{ businesscard_git_branch }}"
    tag: "{{ businesscard_image_tag }}"
  register: _businesscard_imagestream
  when:
    - >-
      businesscard_build_openshift_namespace == openshift_namespace
  tags:
    - all
    - all_build
    - businesscard.is
    - businesscard.image
    - businesscard.imagestream

- name: "Rebuild {{ businesscard_image_name }} now"
  shell:
    cmd: "oc -n {{ openshift_namespace }} start-build --wait businesscard"
  register: "_build_id"
  when:
    - >
      (
        _businesscard_imagestream | default(False)
        and
        (_businesscard_imagestream is changed)
      )
      or
      "businesscard.build" in ansible_run_tags
    - >-
      businesscard_build_openshift_namespace == openshift_namespace
  tags:
    - all
    - all_build
    - businesscard.build

- debug:
    msg:
      - "You can follow the build logs with: "
      - "oc logs -f bc/businesscard --version={{ _build_id.stdout | regex_search('\\d+') }} -n {{ openshift_namespace }}"
  when:
    - >
      "stdout" in _build_id
      or
      "businesscard.build" in ansible_run_tags
    - >-
      businesscard_build_openshift_namespace == openshift_namespace
  tags:
    - all
    - all_build
    - businesscard.build
